esphome:
  name: m5stack-atom-echo-a07ff8
  friendly_name: M5Stack Atom Echo a07ff8
  name_add_mac_suffix: false
  project:
    name: m5stack.atom-echo-voice-assistant
    version: "1.0"
  min_version: 2023.11.1

esp32:
  board: m5stack-atom
  framework:
    type: esp-idf

logger:

api:
  encryption:
    key: +nopovimtiho=

ota:

dashboard_import:
  package_import_url: github://esphome/firmware/voice-assistant/m5stack-atom-echo.yaml@main

wifi:
  on_connect:
    - delay: 5s # Gives time for improv results to be transmitted
    - ble.disable:
  on_disconnect:
    - ble.enable:
  ap:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

improv_serial:

esp32_improv:
  authorizer: none

button:
  - platform: factory_reset
    id: factory_reset_btn
    name: Factory reset

i2s_audio:
  i2s_lrclk_pin: GPIO33
  i2s_bclk_pin: GPIO19

microphone:
  - platform: i2s_audio
    id: echo_microphone
    i2s_din_pin: GPIO23
    adc_type: external
    pdm: true

#speaker:
#  - platform: i2s_audio
#    id: echo_speaker
#    i2s_dout_pin: GPIO22
#    dac_type: external
#    mode: mono

voice_assistant:
  id: va
  microphone: echo_microphone
#  speaker: echo_speaker
  noise_suppression_level: 2
  auto_gain: 31dBFS
  volume_multiplier: 2.0
  vad_threshold: 3
  on_listening:
    - if:
        condition:
          text_sensor.state:
            id: sekvence_asistenta
            state: 'Atom pracovna HA OKNABU'
        then:
          - light.turn_on:
              id: led
              blue: 100%
              red: 0%
              green: 0%
              effect: "Slow Pulse"
    - if:
        condition:
          text_sensor.state:
            id: sekvence_asistenta
            state: 'Atom pracovna OAI OKNABU'
        then:
          - light.turn_on:
              id: led
              blue: 0%
              red: 0%
              green: 100%
              effect: "Slow Pulse"
  on_stt_vad_end:
    - if:
        condition:
          text_sensor.state:
            id: sekvence_asistenta
            state: 'Atom pracovna HA OKNABU'
        then:
          - light.turn_on:
              id: led
              blue: 100%
              red: 0%
              green: 0%
              effect: "Fast Pulse"
    - if:
        condition:
          text_sensor.state:
            id: sekvence_asistenta
            state: 'Atom pracovna OAI OKNABU'
        then:
          - light.turn_on:
              id: led
              blue: 0%
              red: 0%
              green: 100%
              effect: "Fast Pulse"
  on_tts_start:
    - if:
        condition:
          text_sensor.state:
            id: sekvence_asistenta
            state: 'Atom pracovna HA OKNABU'
        then:
          - light.turn_on:
              id: led
              blue: 100%
              red: 0%
              green: 0%
              effect: none
          - homeassistant.service:
              service: script.1701303678113
              data_template:
                messaz: "{{my_tts}}"
              variables:
                my_tts: return x;
    - if:
        condition:
          text_sensor.state:
            id: sekvence_asistenta
            state: 'Atom pracovna OAI OKNABU'
        then:
          - light.turn_on:
              id: led
              blue: 0%
              red: 0%
              green: 100%
              effect: none
          - homeassistant.service:
              service: script.1701304114864
              data_template:
                messaz: "{{my_tts}}"
              variables:
                my_tts: return x;
  #  - delay: 1s
  #  - script.execute: reset_led
  #  - script.wait: reset_led    
  #  - voice_assistant.stop
  #  - delay: 1s
  on_end:
    - delay: 1s
#    - wait_until:
#        not:
#          speaker.is_playing:
    - script.execute: reset_led
  on_error:
    - light.turn_on:
        id: led
        red: 100%
        green: 0%
        blue: 0%
        brightness: 100%
        effect: none
    - delay: 1s
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.start_continuous:
          - script.execute: reset_led
  on_client_connected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.start_continuous:
          - script.execute: reset_led
  on_client_disconnected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.stop:
          - light.turn_off: led

text_sensor:
  - platform: homeassistant
    id: sekvence_asistenta
    entity_id: select.m5stack_atom_echo_a07ff8_sekvence_asistenta

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO39
      inverted: true
    name: Button
    disabled_by_default: true
    entity_category: diagnostic
    id: echo_button
    on_multi_click:
      - timing:
          - ON for at least 250ms
          - OFF for at least 50ms
        then:
          - if:
              condition:
                switch.is_off: use_wake_word
              then:
                - if:
                    condition: voice_assistant.is_running
                    then:
                      - voice_assistant.stop:
                      - script.execute: reset_led
                    else:
                      - voice_assistant.start:
              else:
                - voice_assistant.stop
                - delay: 1s
                - script.execute: reset_led
                - script.wait: reset_led
                - voice_assistant.start_continuous:             
      - timing:
          - ON for at least 1s
          - OFF for at least 50ms
        then:
          - homeassistant.service:
              service: automation.trigger
              data:
                entity_id: automation.m5stack_atom_echo_sekvence_asistenta
      - timing:
          - ON for at least 10s
        then:
          - button.press: factory_reset_btn

light:
  - platform: esp32_rmt_led_strip
    id: led
    name: None
    disabled_by_default: true
    entity_category: config
    pin: GPIO27
    default_transition_length: 0s
    chipset: SK6812
    num_leds: 1
    rgb_order: grb
    rmt_channel: 0
    effects:
      - pulse:
          name: "Slow Pulse"
          transition_length: 250ms
          update_interval: 250ms
          min_brightness: 50%
          max_brightness: 100%
      - pulse:
          name: "Fast Pulse"
          transition_length: 100ms
          update_interval: 100ms
          min_brightness: 50%
          max_brightness: 100%
script:
  - id: reset_led
    then:
      - if:
          condition:
            - switch.is_on: use_wake_word
            - switch.is_on: use_listen_light
          then:
#            - light.turn_on:
#                id: led
#                red: 100%
#                green: 89%
#                blue: 71%
#                brightness: 60%
#                effect: none
            - if:
                condition:
                  text_sensor.state:
                    id: sekvence_asistenta
                    state: 'Atom pracovna HA OKNABU'
                then:
                  - light.turn_on:
                      id: led
                      blue: 80%
                      red: 0%
                      green: 0%
                      brightness: 60%
                      effect: none
            - if:
                condition:
                  text_sensor.state:
                    id: sekvence_asistenta
                    state: 'Atom pracovna OAI OKNABU'
                then:
                  - light.turn_on:
                      id: led
                      blue: 0%
                      red: 0%
                      green: 80%
                      brightness: 60%
                      effect: none
          else:
            - light.turn_off: led

switch:
  - platform: template
    name: Use wake word
    id: use_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - lambda: id(va).set_use_wake_word(true);
      - if:
          condition:
            not:
              - voice_assistant.is_running
          then:
            - voice_assistant.start_continuous
      - script.execute: reset_led
    on_turn_off:
      - voice_assistant.stop
      - lambda: id(va).set_use_wake_word(false);
      - script.execute: reset_led
  - platform: template
    name: Use Listen Light
    id: use_listen_light
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - script.execute: reset_led
    on_turn_off:
      - script.execute: reset_led

external_components:
  - source: github://pr#5230
    components:
      - esp_adf
    refresh: 0s

esp_adf: